com.starkbank.Event:getStarkBankPublicKey(com.starkbank.User);com.starkbank.ellipticcurve.PublicKey:fromPem(java.lang.String);com.starkbank.ellipticcurve.PublicKey:fromDer(com.starkbank.ellipticcurve.utils.ByteString);com.starkbank.ellipticcurve.PublicKey:fromString(com.starkbank.ellipticcurve.utils.ByteString,com.starkbank.ellipticcurve.Curve);com.starkbank.ellipticcurve.PublicKey:fromString(com.starkbank.ellipticcurve.utils.ByteString,com.starkbank.ellipticcurve.Curve,boolean);
com.starkbank.utils.Response:fetch(java.lang.String,java.lang.String,com.google.gson.JsonObject,java.util.Map,com.starkbank.User);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:verifySignature(com.starkbank.User,java.lang.String,com.starkbank.ellipticcurve.Signature,boolean);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:verifySignature(com.starkbank.User,java.lang.String,com.starkbank.ellipticcurve.Signature,boolean);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:add(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:create();com.starkbank.ellipticcurve.PrivateKey:toPem();com.starkbank.ellipticcurve.PrivateKey:toDer();com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:<init>(java.lang.String);com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.utils.Response:fetch(java.lang.String,java.lang.String,com.google.gson.JsonObject,java.util.Map,com.starkbank.User);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.utils.Response:fetch(java.lang.String,java.lang.String,com.google.gson.JsonObject,java.util.Map,com.starkbank.User);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey);com.starkbank.ellipticcurve.Ecdsa:sign(java.lang.String,com.starkbank.ellipticcurve.PrivateKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:verifySignature(com.starkbank.User,java.lang.String,com.starkbank.ellipticcurve.Signature,boolean);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:verifySignature(com.starkbank.User,java.lang.String,com.starkbank.ellipticcurve.Signature,boolean);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:verifySignature(com.starkbank.User,java.lang.String,com.starkbank.ellipticcurve.Signature,boolean);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey);com.starkbank.ellipticcurve.Ecdsa:verify(java.lang.String,com.starkbank.ellipticcurve.Signature,com.starkbank.ellipticcurve.PublicKey,java.security.MessageDigest);com.starkbank.ellipticcurve.Math:add(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:create();com.starkbank.ellipticcurve.PrivateKey:toPem();com.starkbank.ellipticcurve.PrivateKey:toDer();com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:create();com.starkbank.ellipticcurve.PrivateKey:toPem();com.starkbank.ellipticcurve.PrivateKey:toDer();com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:<init>(java.lang.String);com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Key:<init>(java.lang.String);com.starkbank.ellipticcurve.PrivateKey:publicKey();com.starkbank.ellipticcurve.Math:multiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianMultiply(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianAdd(com.starkbank.ellipticcurve.Point,com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);com.starkbank.ellipticcurve.Math:jacobianDouble(com.starkbank.ellipticcurve.Point,java.math.BigInteger,java.math.BigInteger);
com.starkbank.Event:getStarkBankPublicKey(com.starkbank.User);com.starkbank.ellipticcurve.PublicKey:fromPem(java.lang.String);com.starkbank.ellipticcurve.PublicKey:fromDer(com.starkbank.ellipticcurve.utils.ByteString);com.starkbank.ellipticcurve.PublicKey:fromString(com.starkbank.ellipticcurve.utils.ByteString,com.starkbank.ellipticcurve.Curve);com.starkbank.ellipticcurve.PublicKey:fromString(com.starkbank.ellipticcurve.utils.ByteString,com.starkbank.ellipticcurve.Curve,boolean);com.starkbank.ellipticcurve.Curve:contains(com.starkbank.ellipticcurve.Point);
