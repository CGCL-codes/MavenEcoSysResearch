me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:setupDefaultSecurity(com.thoughtworks.xstream.XStream);com.thoughtworks.xstream.XStream:allowTypeHierarchy(java.lang.Class);com.thoughtworks.xstream.XStream:addPermission(com.thoughtworks.xstream.security.TypePermission);
me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:setupDefaultSecurity(com.thoughtworks.xstream.XStream);com.thoughtworks.xstream.XStream:allowTypes(java.lang.Class[]);com.thoughtworks.xstream.XStream:addPermission(com.thoughtworks.xstream.security.TypePermission);
me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:setupDefaultSecurity(com.thoughtworks.xstream.XStream);com.thoughtworks.xstream.XStream:addPermission(com.thoughtworks.xstream.security.TypePermission);
me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry);com.thoughtworks.xstream.XStream:setupSecurity();com.thoughtworks.xstream.XStream:addPermission(com.thoughtworks.xstream.security.TypePermission);
me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:allowTypesByWildcard(java.lang.String[]);com.thoughtworks.xstream.XStream:addPermission(com.thoughtworks.xstream.security.TypePermission);
me.zhangchunsheng.anran.common.util.xml.XStreamInitializer:getInstance();com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.io.HierarchicalStreamDriver);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.ClassLoader,com.thoughtworks.xstream.mapper.Mapper);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.core.DefaultConverterLookup);com.thoughtworks.xstream.XStream:<init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver,com.thoughtworks.xstream.core.ClassLoaderReference,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.converters.ConverterRegistry);com.thoughtworks.xstream.XStream:setupSecurity();
