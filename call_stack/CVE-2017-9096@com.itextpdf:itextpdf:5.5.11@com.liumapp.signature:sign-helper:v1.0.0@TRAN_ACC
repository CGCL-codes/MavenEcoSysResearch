com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,int);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfSignatureAppearance:getAppearance();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.PkxSign:sign();com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,int);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfSignatureAppearance:getAppearance();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.ImageDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.PkxSign:sign();com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,int);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfSignatureAppearance:getAppearance();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.PkxSign:sign();com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,int);com.itextpdf.text.pdf.PdfStamperImp:addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard);com.itextpdf.text.pdf.security.MakeSignature:signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard,org.bouncycastle.asn1.esf.SignaturePolicyIdentifier);com.itextpdf.text.pdf.PdfSignatureAppearance:preClose(java.util.HashMap);com.itextpdf.text.pdf.PdfSignatureAppearance:getAppearance();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo3:sign(java.lang.String,java.lang.String,com.liumapp.signature.pdf.helper.utils.SignatureInfo[]);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.ImageDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:close();com.itextpdf.text.pdf.PdfStamperImp:close(java.util.Map);com.itextpdf.text.pdf.PdfStamperImp:flatFields();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.demo.SignDemo:main(java.lang.String[]);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.PkxSign:sign();com.itextpdf.text.pdf.PdfSignatureAppearance:setVisibleSignature(com.itextpdf.text.Rectangle,int,java.lang.String);com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
com.liumapp.signature.pdf.helper.utils.Sign:sign();com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char);com.itextpdf.text.pdf.PdfStamper:createSignature(com.itextpdf.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean);com.itextpdf.text.pdf.PdfSignatureAppearance:<init>(com.itextpdf.text.pdf.PdfStamperImp);com.itextpdf.text.pdf.PdfSignatureAppearance:getNewSigName();com.itextpdf.text.pdf.PdfStamperImp:getAcroFields();com.itextpdf.text.pdf.AcroFields:<init>(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfWriter);com.itextpdf.text.pdf.XfaForm:<init>(com.itextpdf.text.pdf.PdfReader);
