cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:getXMLReader();org.dom4j.io.SAXReader:createXMLReader();org.dom4j.io.SAXReader:isValidating();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:configureReader(org.xml.sax.XMLReader,org.xml.sax.helpers.DefaultHandler);org.dom4j.io.SAXReader:isValidating();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:createContentHandler(org.xml.sax.XMLReader);
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:createDefaultEntityResolver(java.lang.String);org.dom4j.io.SAXReader$SAXEntityResolver:<init>(java.lang.String);
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:isStripWhitespaceText();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:getXMLReader();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:installXMLFilter(org.xml.sax.XMLReader);org.dom4j.io.SAXReader:getXMLFilter();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:isIncludeInternalDTDDeclarations();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:<init>();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:configureReader(org.xml.sax.XMLReader,org.xml.sax.helpers.DefaultHandler);org.dom4j.io.SAXReader:isStringInternEnabled();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:configureReader(org.xml.sax.XMLReader,org.xml.sax.helpers.DefaultHandler);
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:isMergeAdjacentText();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:installXMLFilter(org.xml.sax.XMLReader);
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:createDefaultEntityResolver(java.lang.String);
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:isIncludeExternalDTDDeclarations();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:getXMLReader();org.dom4j.io.SAXReader:createXMLReader();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:createContentHandler(org.xml.sax.XMLReader);org.dom4j.io.SAXReader:getDocumentFactory();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);org.dom4j.io.SAXReader:isIgnoreComments();
cn.onekit.thekit.XML:string2json(java.lang.String);org.dom4j.DocumentHelper:parseText(java.lang.String);org.dom4j.io.SAXReader:read(org.xml.sax.InputSource);
