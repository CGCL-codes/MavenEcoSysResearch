org.keycloak.common.util.CertificateUtils:createSigner(java.security.PrivateKey);org.bouncycastle.crypto.util.PrivateKeyFactory:createKey(byte[]);org.bouncycastle.crypto.util.PrivateKeyFactory:createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo);org.bouncycastle.asn1.x9.X9ECParameters:getInstance(java.lang.Object);org.bouncycastle.asn1.x9.X9ECParameters:<init>(org.bouncycastle.asn1.ASN1Sequence);org.bouncycastle.asn1.x9.X9ECPoint:<init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.asn1.ASN1OctetString);org.bouncycastle.math.ec.ECCurve:decodePoint(byte[]);
org.keycloak.common.util.CertificateUtils:createSigner(java.security.PrivateKey);org.bouncycastle.crypto.util.PrivateKeyFactory:createKey(byte[]);org.bouncycastle.crypto.util.PrivateKeyFactory:createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo);org.bouncycastle.asn1.x9.X9ECParameters:getInstance(java.lang.Object);org.bouncycastle.asn1.x9.X9ECParameters:<init>(org.bouncycastle.asn1.ASN1Sequence);org.bouncycastle.asn1.x9.X9Curve:<init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence);org.bouncycastle.math.ec.ECCurve$F2m:<init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger);org.bouncycastle.math.ec.ECCurve$F2m:<init>(int,int,int,int,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger);
